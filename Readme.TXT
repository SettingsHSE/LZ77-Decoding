Два студента ПИ выполняют совместный проект. Наступил крайний срок сдачи проекта, а студенты ещё не успели закончить работу. 
Проблема в том, что один из студентов, на портативном компьютере которого осталась последняя версия проекта (в виде текста), находится на сборах активистов в учебном центре Вороново (можно заменить на Поречье:), где не имеет доступа к быстрому интернету, чтобы переслать проект второму студенту. Но студенты ПИ помнят, что можно использовать алгоритм сжатия для того, чтобы можно было переслать проект быстрее. К сожалению, на портативном компьютере студента не установлен штатный архиватор, а скорость интернета не позволяет скачать таковой из интернета.
К счастью, мы имеем дело с отличником, а потому он решает разработать архиватор самостоятельно.
Для кодирования студент решает реализовать алгоритм LZ77 с размером скользящего окна: 
4 Кб (буфер предыстории - 3 Кб),
Второй студент получил посылку с закодированным сообщением, и теперь ему надо восстановить исходный текст.
В этой задаче требуется реализовать только декодирование полученной строки.

Формат ввода
Две строки, в первой из которых количество элементов-троек (смещение, длина, символ) или (offset, length, char),
во второй сами элементы в указанном порядке, разделенные пробелами.
Пример:
4
0 0 a 0 0 b 2 1 c 2 2 #

Формат вывода
Одна строка с текстом, содержащим только буквы английского алфавита, строка заканчивается символом конца строки "#" решетка.
Длина строки до 256 Kb.
Пример: abababcdab#